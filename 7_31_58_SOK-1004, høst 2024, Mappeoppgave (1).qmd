---
title: "SOK-1004, høst 2024, Mappeoppgave"

author: "[7_31_58]"

format: pdf

echo: false

output: true

editor: visual
---

# 1. Bakgrunn

I denne oppgaven skal du undersøke ulikhet i inntektsfordelingen i Norge og internasjonalt ved å bruke flere datasett. Dere skal laste ned data fra [OECD](https://stats.oecd.org/index.aspx?r=994307#), [Eurostat](https://ec.europa.eu/eurostat/web/main/data/database) og har tilgang til lokale inntektstall fra GitHub.

Som en del av besvarelsen blir dere bedt om å lage "pene" figurer. Ekstern sensor på faget (Even S. Hvinden, Forsvarets forskningsinstitutt) presiserer at dette innebærer at dere følger STAV-prinsippet for gode figurer:

\* **S**elvstendig: Figuren og tilhørende figurtekst inneholder all nødvendig informasjon for en éntydig tolkning av innholdet. Enhetene, utvalget og transformasjoner fremkommer tydelig.

\* **T**ydelig: Farger, linjestørrelse, og andre visuelle egenskaper kombinerer til å gjøre figuren lettleselige og bidrar til å fremheve egenskapen ved datasettet figuren illustrerer.

\* **A**vgrenset: Figuren fremhever og illustrerer ett og kun ett poeng. Har dataene flere egenskaper vi vil vise så lager vi flere figurer.

\* **V**akker: Figuren gir en utvungen og intuitiv følelse av tilfredsstillelse og mening.

# 2. Instruksjoner og oppgaver

Mappeoppgaven kan besvares individuelt eller i grupper på inntil 3. Grupper anbefales å undertegne en [samarbeidsavtale](https://github.com/uit-sok-1004-h24/uit-sok-1004-h24.github.io/blob/main/Samarbeidsavtale%20for%20gruppearbeid%20SOK1004.docx). Det er tillatt å bruke kunstig intelligens som for eksempel ChatGPT til å skrive kode, og til å finpusse din tekst. Det er ikke tillatt å be KI-verktøyet om å skrive din besvarelse. (Jeg har sjekket hvilke type svar man får fra KI). Dersom du bruker et KI verktøy [**må**]{.underline} du lage et appendiks til din besvarelse som dokumenterer hvor i besvarelsen og hvordan du har brukt det. I forelesning 4 fikk dere noen tips om hvordan dere kan sitere KI.

Bruk [Quarto](https://quarto.org/) i RStudio som plattform. Bruk følgende YAML kode øverst i dokumentet

------------------------------------------------------------------------

------------------------------------------------------------------------

I Wiseflow skal dere levere

1.  en lenke til GitHub repoet hvor din Quarto (qmd) fil ligger, som viser din besvarelse inkludert kode, og

2.  en pdf fil som inneholder din besvarelse med tekst og figurer (ikke kode). Bruk følgende YAML kode øverst i Quarto dokumentet (du kan tilpasse med evt andre settinger).

**Husk å gi Derek tilgang til ditt repo!** Brukernavn: derekjclark

Dere skal svare på følgende oppgavene:

## Oppgave 1 - Utvikling av ulikhetsmål i Norge over tid og mellom aldersgrupper

I denne oppgaven skal vi laste ned data fra [OECD Income distribution database (IDD)](https://data-explorer.oecd.org/vis?lc=en&df%5Bds%5D=dsDisseminateFinalDMZ&df%5Bid%5D=DSD_WISE_IDD%40DF_IDD&df%5Bag%5D=OECD.WISE.INE&dq=.A.......&pd=%2C&to%5BTIME_PERIOD%5D=false) ved hjelp av deres [API-løsning](https://gitlab.algobank.oecd.org/public-documentation/dotstat-migration/-/raw/main/OECD_Data_API_documentation.pdf). Dette bruker en R-pakke som heter `rsdmx` som må installeres (`install.packages("rsdmx")`. API-spørringen lager man i IDD lenken gitt ovenfor ved å klikke på knappen "Developer API". Her ser du "Data query SDMX flavour". Ved å velge filtre på venstre siden av IDD siden endres denne spørringen. Velger jeg for eksempel Time period 2015-2023 og trykker på "Copy code" får jeg en URL som jeg kan buker i min spørring. Dere kan redusere størrelsen på datasettet ved å filtrere bort noen valg som er av mer metodologisk art. Velg for eksempel "Methodology: Income definition since 2012" og "Definition: Current definition" for å ta bort mange oberservasjoner. Jeg skal i tillegg velge ut de målene som jeg er interessert i Measure: Gini (disposable income), Gini (market income), Gini (gross income) og P90/P10. Så "Copy code"

```{r warning=FALSE, message=FALSE}

rm(list=ls()) 

# laste pakken for å lese data samt tidyverse
library(rsdmx)
library(tidyverse)
library(dplyr)
library(ggrepel)
library(ineq)
library(eurostat)
```

```{r warning=FALSE, message=FALSE}
#url for hele befolkningen
url <- "https://sdmx.oecd.org/public/rest/data/OECD.WISE.INE,DSD_WISE_IDD@DF_IDD,1.0/.A.INC_GROSS_GINI+INC_DISP_GINI+INC_MRKT_GINI+D9_1_INC_DISP....METH2012.D_CUR.?startPeriod=2015&endPeriod=2023&dimensionAtObservation=AllDimensions"

data <- readSDMX(url)

df <- as_tibble(data)
```

```{r warning=FALSE, message=FALSE}
df <- df %>% 
  as_tibble() %>% 
  rename(År = TIME_PERIOD, Land = REF_AREA)%>%
  mutate(År = as.integer(År)) %>% 
  filter(Land %in% c("NOR"))

#I denne kodeboksen har vi forandret navn på 2 av variablene til norsk og gjort om kolonnen "År" til en int.
```

```{r warning=FALSE, message=FALSE}
df_wide <- df %>%
  pivot_wider(names_from = MEASURE, values_from = obsValue)
#Her lager vi et nytt datasett i wide format sånn at vi får muligheten til å skille mellom de ulike GINI verdiene og P90/P10. Dette gir oss en enklere måte å plotte figurene grunnet at vi slipper å skille dem fra "MEASURE" i koden.
```

```{r warning=FALSE, message=FALSE}
#Figur 1
df_wide %>%
  ggplot(aes(x = År)) +
  geom_path(aes(y = INC_DISP_GINI, color = "Disponibel inntekt"),
   size = 1.2) +
  geom_path(aes(y = INC_MRKT_GINI, color = "Markedsinntekt"),
   size = 1.2) +
  geom_path(aes(y = INC_GROSS_GINI, color = "Bruttoinntekt"),
   size = 1.2) +
  
  geom_point(aes(y = INC_DISP_GINI, color = "Disponibel inntekt"),size = 3) +
  geom_point(aes(y = INC_MRKT_GINI, color = "Markedsinntekt"), size = 3) +
  geom_point(aes(y = INC_GROSS_GINI, color = "Bruttoinntekt"), size = 3) +
  facet_wrap(~ AGE, labeller = labeller(AGE = c('_T' = 'Hele Befolkningen', 
   'Y18T65' = 'Alder 18-65 år', 'Y_GT65' = 'Alder 65+ år'))) +
  
  labs(title = "Gini-indeks Utvikling etter Aldersgruppe", 
   x = "År", 
   y = "Gini-verdi") +
  scale_color_manual(values = c("Disponibel inntekt" = "purple", 
   "Markedsinntekt" = "blue", "Bruttoinntekt" = "red")) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold"),
    axis.title = element_text(size = 14),
    strip.text = element_text(size = 14),
    legend.position = "bottom",
    legend.title = element_blank())
#Ved hjelp av tidyverse kan vi plote de 3 ulike GINI variblene for de 3 aldersgruppene slik at vi kan visualisere forskjellen i utviklingen.
```

```{r warning=FALSE, message=FALSE}
#Figur 2
df_wide %>%
  ggplot(aes(x = År, y = D9_1_INC_DISP, group = AGE, color = AGE)) +
  geom_point(size = 3) +
  facet_wrap(~ AGE,labeller = labeller(AGE = c('_T' = 'Hele Befolkningen', 
   'Y18T65' = 'Alder 18-65 år', 'Y_GT65' = 'Alder 65+ år'))) +
  labs(title = "D9 Gini-indeks Utvikling etter Aldersgruppe", 
    x = "År", 
    y = "D9 Gini-verdi") +
  scale_color_manual(values = c('_T' = 'green', 'Y18T65' = 'red', 'Y_GT65' =     'blue'),
    labels = c("Hele Befolkningen", "Alder 18-65 år", "Alder 65+ år")) +
  
  theme_minimal() +
  theme(
    plot.title = element_text(size = 18, face = "bold"),
    axis.title = element_text(size = 14),
    strip.text = element_text(size = 14),
    legend.position = "bottom",
    legend.title = element_blank()
  )
#I likhet med figur 1 plotter vi til en figur ved hjelp av tidyverse som gjør det mulig å se utviklingen blant de 3 forskjellige aldersgruppene i forhold til P90/P10
```

Da har vi fått en tibble som vi kan bruke til analyse. Det er mulig at dere vil filtrere bort noen observasjoner og ta bort noen kolonner i tibble som dere jobber med. Du kan også vurdere å gi bedre navn til dine variabler.

Vi skal se på Norge mellom 2015-2023, og er interessert i å se hvordan alder påvirker de fire mål på ulikhet som vi har lastet ned.

Bruk datasettet til å lage to pene figur, hver med tre paneler (ved hjelp av `facets()` for eksempel). I hvert panel skal du tegne et plott med årstall på den horisontale `x`-aksen, og verdien på Gini (3 definisjoner) og P90/P10 på den vertikale `y`-aksen. Lag én figur for Gini og én for P90/P10.

I det første panelet i figuren velger du hele befolkningen, i det andre panelet tar du de mellom 18-65, og i det tredje de som er over 65 år gammel. I datasettet heter disse `_T`, `Y18T65`, `Y_GT65` for variablen `AGE`. Gi hele figuren og hvert panel passende titler, og husk benevning av aksene, samt legende til figurene (plasser den gjerne under figuren).

Gi en nøyaktig beskrivelse av figuren. og bruk den til å svare på følgende spørsmål:

-   Hva viser Gini-målene om utviklingen av ulikhet i Norge?

-   Hvordan forklarer man eventuelle forskjeller mellom de tre Gini-koeffisientene?

-   Er det forskjeller i ulikhet mellom aldersgrupper?

-   Hvilken rolle spiller samfunnets institusjoner, for eksempel skatte- og pensjonssystemet, for utjevning av ulikhet mellom aldersklassene?

-   Viser utviklingen av P90/P10 det samme som Gini koeffisientene? Hvorfor/hvorfor ikke?

-   Vi har data på alder. Hvorvidt kan vi bruke vår analyse for å danne et bilde om ulikhet og yrkesstatus? Hva trenger man av ekstra informasjon (data) for å gjennomføre en slik analyse.

\[Svar under\]

Figurene består av tre paneler, som hver representerer en aldersgruppe. Gini-målene viser at ulikheten er høyere før skatt (markedsinntekt) enn etter skatt og overføringer (disponibel inntekt), noe som betyr at skattesystemet reduserer ulikheten. Markedsinntekt viser størst ulikhet fordi det er før skatt.

Disponibel inntekt er lavere fordi skatter og overføringer reduserer ulikheten. Bruttoinntekt ligger mellom de to. Eldre (65+) har lavere ulikhet enn de mellom 18-65 år. Dette skyldes at pensjoner gir jevnere inntekter blant eldre. Skatter og pensjonssystemet reduserer ulikheten, spesielt for eldre som har jevnere pensjonsinntekter. Utviklingen av P90/P10 viser ikke det samme som Gini-målene, og fokuserer bare på forskjellen mellom de rikeste og fattigste 10 %, mens Gini måler ulikhet i hele inntektsfordelingen. For å analysere ulikhet og yrkesstatus trenger vi ekstra data om yrkesstatus, lønn, arbeidstid og ytelser, som sykepenger og arbeidsledighetstrygd.

## Oppgave 2 - Er det en kobling mellom inntekt eller inntektsulikhet og livskvalitet?

Det kan være nyttig å kjenne til [World Happiness Report 2024](https://worldhappiness.report/ed/2024/) for å løse denne oppgaven.

Vi skal se på to mulige koblinger mellom lykke (dvs livskvalitet) og inntekt:

1.  Er folk som bor i rike land generelt lykkeligere enn de som bor i fattige land?

2.  Er folk som bor i land med lav inntektsulikhet lykkeligere enn de som bor i land med store inntektsforskjeller?

For å svare på disse spørsmålene skal vi bruke data fra Eurostat. For a laste ned data direkte fra databasen må man installere R-pakken `eurostat` (`install.packages("eurostat")`). Tabellene hos Eurostat har en "Online data code" som vi bruker for å laste ned data. (Denne prosessen er mye enklere enn å laste ned fra SSB og OECD!). Vi skal bruke følgende tabeller

-   ilc_pw01 - livskvalitet

-   ilc_di12 - gini koeffisient

-   nama_10_pc - bnp per person

La oss laste ned data om livskvalitet:

```{r warning=FALSE, message=FALSE}
rm(list=ls()) 

# laste pakken for å lese data samt tidyverse
library(rsdmx)
library(tidyverse)
library(dplyr)
library(ggrepel)
library(ineq)
library(eurostat)
#For å fjerne datasett vi ikke trenger videre i denne oppgaven
```

```{r warning=FALSE, message=FALSE}
livs_kval <- get_eurostat("ilc_pw01")
gini_ko <- get_eurostat("ilc_di12") 
bnp_pp <- get_eurostat("nama_10_pc")
#Her laster vi inn de forskjellige datasettene inn i R
```

Se på datasettet (som er en tibble). Her ser vi at det er mange forkortelser som ikke nødvendigvis er lett å forstå. Heldigvis har pakken en måte å rydde på:

```{r warning=FALSE, message=FALSE}

livs_kval <-  livs_kval %>% 
  label_eurostat() 

gini_ko <- gini_ko %>% 
  label_eurostat()

bnp_pp <- bnp_pp %>% 
  label_eurostat()
#Her rydder vi på de 3 forskjellige datasettene
```

Her er det 10 variabler og mange observasjoner. Vi er interessert i et samlet mål for livskvalitet i landene som er med i datasettet, og vi vil bare måle ett enkelt år. Vi velger 2022 ettersom det finnes ikke mål på Gini etter dette hos Eurostat. Følgende kode gir oss det vi trenger, og tar bort samlingen av EU-statene, så velges det kun de kolonnene som vi er interessert i:

```{r warning=FALSE, message=FALSE}
livs_kval_22 <- livs_kval %>% 
  filter(sex == "Total" &
    TIME_PERIOD == "2022-01-01" &
    age == "16 years or over" &
    isced11 == "All ISCED 2011 levels" &
    geo != "European Union - 27 countries (from 2020)") %>% 
  rename("livskvalitet" = values) %>% 
  select(geo, livskvalitet)
#Her lager vi et nytt datasett der vi har sortert og filtrert datasettet for livskvalitet
```

```{r warning=FALSE, message=FALSE}
gini_ko_22 <- gini_ko %>% 
  filter(grepl("2022", TIME_PERIOD)) %>% 
  rename("gini_koefficient" = values) 
#Her lager vi et nytt datasett der vi har sortert og filtrert datasettet for gini koefficient
```

```{r warning=FALSE, message=FALSE}
gini_ko_22 <- gini_ko_22 %>%
  group_by(geo) %>% 
  summarise(gini_koefficient = mean(gini_koefficient, na.rm = TRUE))
#Her forandrer vi datasettet til å ha gjennomsnittet for befolkningen i landet.
```

```{r warning=FALSE, message=FALSE}
bnp_pp_22 <- bnp_pp %>%
  filter(TIME_PERIOD == "2022-01-01", 
  unit %in% c(
"Current prices, purchasing power standard (PPS, EU27 from 2020) per capita"   , "Gross domestic product at market prices")) %>%  
  
  rename("bnp_per_capita" = values) %>%
  select(geo, bnp_per_capita) %>%
  group_by(geo) %>%
  summarise(bnp_per_capita = mean(bnp_per_capita, na.rm = TRUE))
#Her lager vi et nytt datasett der vi har sortert og filtrert datasettet for BNP
```

### Oppgave 2a

\(i\) Last ned data fra de andre to tabellene, og lag ett datasett som viser tall som er representative verdier for Gini-koeffisienten, indeks for livskvalitet og BNP per capita for hvert land i datasettet. Du kan koble sammen datasett ved å bruke `inner_join()`: for eksempel `inner_join(data1, data2, by = "geo")`, hvor `data1` og `data2` er dine datasett.

```{r warning=FALSE, message=FALSE}
livs_gini <- inner_join(livs_kval_22, gini_ko_22, by = "geo")
#Her slår vi sammen datasettene for livskvalitet og Gini
```

```{r warning=FALSE, message=FALSE}
livs_gini_bnp <- inner_join(livs_gini, bnp_pp_22, by = "geo")
#Her slår vi sammen datasettet for BNP inn med datasettetene fra forrige kodeboks
```

\(ii\) Forklar nøye hva tallene i datasettet representerer, og hvordan de er målt.

\[Svar under\]

I denne oppgaven ser vi 3 tall etter 3 målinger. Det første er GINI Koeffisient, dette er en prosentmåling som hvor en “score” på 0 prosent er komplett inntektslikhet mens 100 vil være en ekstrem form for inntektulikhet. GINI er en måleenhet som blir brukt av flere enn kun eurostat. I dette datasettet har vi brukt det for målingene i EU. Datasettet om livskvalitet ifra eurostat innholder verdier fra en undersøkelse som de har hatt, der de har hentet inn tall ifra EU/EØS landene om hvordan livskvaliteten er i de respektive landene for deres egen befolkning. Tallene er satt på en skala ifra 0-10 hvor null er betyr null livskvalitet mens 10 er det beste en nasjon kan få. Datasettet som innholder tallene BNP per capita er forskjellige målinger gjort på BNP per person for å finne ut hovedsakelig kjøpekraft per person i et land. Hensikten er å måle hvor stabilt et land er økonomisk ved å se på hvor mye verdi som kommer til gode til per person ved å dele den totale BNP-en altså bruttonasjonalprodukt på innbyggertallet.

### Oppgave 2b

Lag to pene figurer. I den ene plotter du bnp per capita mot livskvalitet, og i den andre Gini mot livskvalitet. Merk gjerne punktene i figuren med landnavn. Her kan R-pakken [ggrepel](https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html) være nyttig. Bruk `geom_smooth(method = lm, se = FALSE)` for å se om det er en sammengeng i mellom variablene.

```{r warning=FALSE, message=FALSE}
#Figur 1
livs_gini_bnp %>% 
  ggplot(aes(x = bnp_per_capita, y = livskvalitet, label = geo)) +
  geom_point(color = "green", size = 3, shape = 21, fill = "white") +
  geom_text_repel(size = 2.5) +
  geom_smooth(method = "lm", se = FALSE, color = "red", size = 0.3,
   linetype   = "dashed") +
  scale_x_log10(labels = scales::label_number())+
    
  labs(
   title = "BNP vs. Livskvalitet i 2022",
   subtitle = "BNP per person målt sammen med Livskvalitets målingene fra Eurostat i EU/EØS land", size = 3,
   x = "BNP per pers i euro",
   y = "Livskvalitet målt i skala 0-10"
  ) +
  theme_minimal()
#Her lager vi et plot ved bruk av tidyverse og ggrepel for å få en figur som viser BNP målt opp mot livskvalitet i de forskjellige landene.
```

```{r warning=FALSE, message=FALSE}
#Figur 2
livs_gini_bnp %>% 
  ggplot(aes(x = gini_koefficient, y = livskvalitet,
  label =   geo)) +
  geom_point(color = "green", size = 3, shape = 21, fill = "white") +
  geom_text_repel(size = 2.5) +
  geom_smooth(method = "lm", se = FALSE, color = "red", linetype = "dashed"   ) +
    
    
  labs(
    title = "Gini-koeffisient vs. Livskvalitet i 2022",
    subtitle = "Høyere tall på gini = større lønsforskjell blant befolkningen",
    x = "Gini-koeffisient målt i prosent",
    y = "Livskvalitet målt i skala 0-10"
    ) +
  theme_minimal()
#Her gjør vi det samme som i figur 1, men vi lager en plot for
#Gini-koeffisienten målt mot livskvalitet istedet.
```

### Oppgave 2c

-   Forklar figurene fra 2b nøye. Hva kan vi si (og ikke si) om sammenhengen mellom livskvalitet og inntekt og livskvalitet og inntektsulikhet. Hvordan kan dine funn forklares?
-   Hvilke faktorer på samfunnsnivå tror du kan påvirke lykke uavhengig av inntekt, og hvordan påvirker disse faktorene egenskapene til spredningsplottene?

Finn gjerne faglitteratur for å underbygge dine påstander.

\[Svar under\]

Her ser vi to grafer der livskvalitetsmålinger fra Eurostat er satt sammen med BNP per person i den første grafen, og Gini-koeffisient i den andre. Gini-koeffisienten måler inntektsforskjeller i de foskjellige EU/EØS-landene, mens BNP per person deler den totale BNP-en i landet på befolkningen. Vi ser at EU/EØS-landene i stor grad er samlet, noe som gjør det enklere å sammenligne dem. Kan også nevnes at både Gini og BNP er målt i euro.

Ifølge Sam Wren-Lewis i artikkelen *"Creating a Happy Society Is More Complicated Than We Think"*, er et lykkelig samfunn mer enn bare å oppfylle visse økonomiske faktorer. Han sammenligner det med å bygge et hus. Nemlig at grunnmuren er avgjørende, og at den består av trygghet og stabilitet i samfunnet. Videre peker Wren-Lewis på at et stabilt samfunn krever mer enn høy inntekt, han mener at faktorer som likhet, god infrastruktur og politisk stabilitet er like viktige.

Dette støttes av grafene, som viser at noen land med lavere BNP per person, som Finland og Slovenia, fortsatt står høyt på livskvalitet. Dette indikerer at andre faktorer enn økonomi spiller en betydelig rolle i folks lykke. I Sveits, som har høyere inntektsforskjeller, ser vi også høy livskvalitet, noe som tyder på at økonomisk ulikhet ikke nødvendigvis fører til lavere lykke. Dette understøtter Wren-Lewis’ poeng om at det å bygge et lykkelig samfunn handler om mer enn bare økonomiske forhold.

## Oppgave 3 - Inntektsulikhet i Troms fylke

I filen fra Forelesning 6 har vi data for 2015 om alder, kjønn, bostedskommune, fødeselsår, samt økonomisk data om inntekt, skatt og formue.

```{r warning=FALSE, message=FALSE}
rm(list=ls()) 

# laste pakken for å lese data samt tidyverse
library(rsdmx)
library(tidyverse)
library(dplyr)
library(ggrepel)
library(ineq)
library(eurostat)
#For å fjerne datasett vi ikke trenger videre i denne oppgaven
```

```{r warning=FALSE, message=FALSE}

url <- "https://raw.githubusercontent.com/uit-sok-1004-h24/uit-sok-1004-h24.github.io/main/data/skatt_troms_2015.RDS"

skatt_troms_2015 <- url %>%
  url() %>%
  gzcon() %>% 
  readRDS()
#Her laster vi inn datasettet skatt_troms_2015
```

1.  Lag en ny variabel som viser inntekt etter skatt, og fjern negative verdier (forklar gjerne hvorfor).

    ```{r warning=FALSE, message=FALSE}
     skatt_troms_2015 <- skatt_troms_2015 %>%
      mutate(inntekt_etter_skatt = inntekt - skatt) %>%
      filter(inntekt_etter_skatt >= 0)

    summary(skatt_troms_2015$inntekt_etter_skatt)

    print(skatt_troms_2015)
    #Her filtrer vi datasettet ved å bruke tidyverse
    #Variabelen inntekt_etter_skatt er laget ved å trekke skatt fra inntekt.
    ```

    Hvis det finnes rader hvor skatt er høyere enn inntekt, ville dette resultert i negativ inntekt etter skatt. Det vil være greit å fjerne disse fordi negativ inntekt etter skatt i virkeligheten ofte ikke er mulig eller gir mening i de fleste analyser.

2.  beregn gjennomsnittet for de økonomiske variablene (inntekt, inntekt etter skatt, skatt og formue). Undersøk hvordan gjennomsnittene og medianverdiene er i forhold til bostedskommune. Forklaring av kommunenummer [kan du finne her](https://no.wikipedia.org/wiki/Norske_kommunenummer). Husk at datasettet kommer fra 2015. Tegn pene figurer som hjelper oss å visualisere dataene, og forklar hva de viser.

    I henhold til stav prinsippet deler vi opp oppgave 3 i flere figurer som viser gjennomsnitt og median for de fire ulike punktene i oppgaven.

    ```{r warning=FALSE, message=FALSE}
      skatt_sortert <- skatt_troms_2015 %>%
      group_by(kommnr) %>%
      summarise(
        gjennomsnitt_inntekt = mean(inntekt, na.rm = TRUE),
        median_inntekt = median(inntekt, na.rm = TRUE),
        gjennomsnitt_inntekt_etter_skatt = mean(inntekt_etter_skatt, na.rm =     TRUE),
        median_inntekt_etter_skatt = median(inntekt_etter_skatt, na.rm = TRUE     ),
        gjennomsnitt_skatt = mean(skatt, na.rm = TRUE),
        median_skatt = median(skatt, na.rm = TRUE),
        gjennomsnitt_formue = mean(formue, na.rm = TRUE),
        median_formue = median(formue, na.rm = TRUE))
    #Her lager vi et nytt datasett som er en sortert versjon av datasettet skatt_troms_2015 og filtrer bort manglende/tomme observasjoner.
    ```

    ```{r warning=FALSE, message=FALSE}

    skatt_sortert <- skatt_sortert %>% 
      mutate(kommnr = recode(kommnr,'1902' = 'Tromsø',
                             '1903' = 'Harstad',
                             '1911' = 'Kvæfjord',
                             '1912' = 'Sandtorg',
                             '1913' = 'Skånland',
                             '1914' = 'Trondenes',
                             '1915' = 'Sand/Bjarkøy',
                             '1916' = 'Andørja',
                             '1917' = 'Ibestad',
                             '1918' = 'Astafjord',
                             '1919' = 'Gratangen',
                             '1920' = 'Lavangen',
                             '1921' = 'Salangen',
                             '1922' = 'Bardu',
                             '1923' = 'Øverbygd/Salangen',
                             '1924' = 'Målselv',
                             '1925' = 'Sørreisa',
                             '1926' = 'Dyrøy',
                             '1927' = 'Tranøy',
                             '1928' = 'Torsken',
                             '1929' = 'Berg',
                             '1930' = 'Hillesøy',
                             '1931' = 'Lenvik',
                             '1932' = 'Malangen',
                             '1933' = 'Balsfjord',
                             '1934' = 'Tromsøysund',
                             '1935' = 'Helgøy',
                             '1936' = 'Karlsøy',
                             '1937' = 'Ullsfjord',
                             '1938' = 'Lyngen',
                             '1939' = 'Storfjord',
                             '1940' = 'Kåfjord',
                             '1941' = 'Skjervøy',
                             '1942' = 'Nordreisa',
                             '1943' = 'Kvænangen'))

    skatt_troms_2015 <- skatt_troms_2015 %>% 
      mutate(kommnr = recode(kommnr,'1902' = 'Tromsø',
                             '1903' = 'Harstad',
                             '1911' = 'Kvæfjord',
                             '1912' = 'Sandtorg',
                             '1913' = 'Skånland',
                             '1914' = 'Trondenes',
                             '1915' = 'Sand/Bjarkøy',
                             '1916' = 'Andørja',
                             '1917' = 'Ibestad',
                             '1918' = 'Astafjord',
                             '1919' = 'Gratangen',
                             '1920' = 'Lavangen',
                             '1921' = 'Salangen',
                             '1922' = 'Bardu',
                             '1923' = 'Øverbygd/Salangen',
                             '1924' = 'Målselv',
                             '1925' = 'Sørreisa',
                             '1926' = 'Dyrøy',
                             '1927' = 'Tranøy',
                             '1928' = 'Torsken',
                             '1929' = 'Berg',
                             '1930' = 'Hillesøy',
                             '1931' = 'Lenvik',
                             '1932' = 'Malangen',
                             '1933' = 'Balsfjord',
                             '1934' = 'Tromsøysund',
                             '1935' = 'Helgøy',
                             '1936' = 'Karlsøy',
                             '1937' = 'Ullsfjord',
                             '1938' = 'Lyngen',
                             '1939' = 'Storfjord',
                             '1940' = 'Kåfjord',
                             '1941' = 'Skjervøy',
                             '1942' = 'Nordreisa',
                             '1943' = 'Kvænangen'))
    #Endrer fra kummunenr til reele kommune navn for enklere visualisering
    ```

    ```{r warning=FALSE, message=FALSE}
    #Figur til oppgave 3.2
    options(scipen=999)#Vi bruker denne koden sånn at vi ikke skal få opp noe annet enn den fullstendige verdiene på y aksen.

    skatt_sortert %>% 
     ggplot()+
     geom_bar(aes(x = factor(kommnr), y = gjennomsnitt_inntekt_etter_skatt, fill =    "Gjennomsnitt inntekt etter skatt"), 
      stat = "identity", alpha = 0.7, width = 0.4,
      position = position_nudge(x = -0.2)) +
      geom_bar(aes(x = factor(kommnr), y = median_inntekt_etter_skatt, fill =         "Median inntekt etter skatt"), 
      stat = "identity", alpha = 0.7, width = 0.4,
      position = position_nudge(x = 0.2)) +


     scale_fill_manual(values = c("Gjennomsnitt inntekt etter skatt" = "blue", 
      "Median inntekt etter skatt" = "green"),
      name = "Inntektstype etter skatt",
      labels = c("Gjennomsnitt inntekt etter skatt", "Median inntekt etter skatt")) +
     labs(title = "Gjennomsnitt og median inntekt etter skatt per kommune", 
       x = "Kommune", y = "Inntekt etter skatt") +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1),
       legend.position = "right")
    #Her plotter vi en figur som viser oss forskjellen mellom gjennomsnitt og median inntekten i de forskjellige kommunene etter skatt, ved å bruke tidyverse
    ```

    Denne figuren sammenligner gjennomsnittlig inntekt etter skatt og median inntekt etter skatt per kommune. Denne figuren viser hvordan inntektene ser ut etter skatt er trukket fra. Igjen, forskjellen mellom gjennomsnitt og median kan gi innsikt i inntektsfordelingen etter skatt.

    ```{r warning=FALSE, message=FALSE}
    options(scipen=999)#Vi bruker denne koden sånn at vi ikke skal få opp noe annet enn den fullstendige verdiene på y aksen.

    skatt_sortert %>% 
     ggplot() +
     geom_bar(aes(x = factor(kommnr), y = gjennomsnitt_inntekt, fill = "Gjennomsnitt inntekt"), 
      stat = "identity", alpha = 0.7, width = 0.4,
      position = position_nudge(x = -0.2)) +
     geom_bar(aes(x = factor(kommnr), y = median_inntekt, fill = "Median inntekt"), 
     stat = "identity", alpha = 0.7, width = 0.4,
     position = position_nudge(x = 0.2)) +
     scale_fill_manual(values = c("Gjennomsnitt inntekt" = "blue", "Median inntekt" = "green"), name = "Inntektstype", 
      labels = c("Gjennomsnitt inntekt", "Median inntekt")) +
      
     labs(title = "Gjennomsnitt og median inntekt per kommune", 
           x = "Kommune", 
           y = "Inntekt") +
     theme_minimal() +
     theme(axis.text.x = element_text(angle = 45, hjust = 1),
      legend.position = "right")
    #Her plotter vi en figur som viser oss forskjellen mellom gjennomsnitt og median inntekten i de forskjellige kommunene, ved å bruke tidyverse
    ```

    Denne figuren sammenligner gjennomsnittlig inntekt og median inntekt per kommune. Hver kommune er representert på x-aksen, mens y-aksen viser inntekt i norske kroner. Hvis forskjellen mellom gjennomsnitt og median er stor, kan dette tyde på at inntektsfordelingen i kommunen er skjev, med noen personer som tjener mye mer enn resten.

    ```{r warning=FALSE, message=FALSE}
    options(scipen=999)#Vi bruker denne koden sånn at vi ikke skal få opp noe annet enn den fullstendige verdiene på y aksen.

    skatt_sortert %>% 
     ggplot() +
     geom_bar(aes(x = factor(kommnr), y = gjennomsnitt_skatt, fill = "Gjennomsnitt skatt"), stat = "identity", alpha = 0.7, width = 0.4,
      position = position_nudge(x = -0.2)) +
     geom_bar(aes(x = factor(kommnr), y = median_skatt, fill = "Median skatt"), 
      stat = "identity", alpha = 0.7, width = 0.4, 
      position = position_nudge(x = 0.2)) +

      scale_fill_manual(values = c("Gjennomsnitt skatt" = "blue",
       "Median skatt" = "green"), name = "Skattetype",
       labels = c("Gjennomsnitt skatt", "Median skatt")) +
      labs(title = "Gjennomsnitt og median skatt per kommune", 
       x = "Kommune",
       y = "Skatt") +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1),
            legend.position = "right")
    #Her plotter vi en figur som viser oss forskjellen mellom gjennomsnittsskatten og medianskatten de forskjellige kommunene må betale, ved å bruke tidyverse
    ```

    Denne figuren viser gjennomsnittlig skatt og median skatt per kommune. Figuren gir innsikt i hvor mye skatt folk i forskjellige kommuner betaler i gjennomsnitt sammenlignet med medianen

    ```{r warning=FALSE, message=FALSE}
    options(scipen=999)#Vi bruker denne koden sånn at vi ikke skal få opp noe annet enn den fullstendige verdiene på y aksen.

    skatt_sortert %>% 
      ggplot() +
      geom_bar(aes(x = factor(kommnr), y = gjennomsnitt_formue, fill = "Gjennomsnitt formue"), 
       stat = "identity", alpha = 0.7, width = 0.4,
       position = position_nudge(x = -0.2)) +
      geom_bar(aes(x = factor(kommnr), y = median_formue, fill = "Median formue"), 
       stat = "identity", alpha = 0.7, width = 0.4, 
       position = position_nudge(x = 0.2)) +


      scale_fill_manual(values = c("Gjennomsnitt formue" = "blue", 
        "Median formue" = "green"),
        name = "Formuetype",labels = c("Gjennomsnitt formue", "Median formue")) +
        labs(title = "Gjennomsnitt og median formue per kommune", 
        x = "Kommune",
        y = "Formue") +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1),
       legend.position = "right")
    #Her plotter vi en figur som viser oss forskjellen mellom gjennomsnitt og median formuen de forskjellige kommunene har, ved å bruke tidyverse
    ```

    Denne figuren sammenligner gjennomsnittlig formue og median formue per kommune. Forskjellen mellom gjennomsnitt og median formue kan indikere graden av ulikhet i formue i hver kommune.

3.  Bruk pakken ineq for å beregne Ginikoeffisienter for inntekt før og etter skatt for de ulike kommunene i Troms. Vis resultatene i en pen figur.

    ```{r warning=FALSE, message=FALSE}
    ginikoeff <- skatt_troms_2015 %>%
      group_by(kommnr) %>%
      summarise(
        gini_inntekt = ineq(inntekt, type = "Gini", na.rm = TRUE),
        gini_inntekt_etter_skatt = ineq(inntekt_etter_skatt, type = "Gini", na.rm = TRUE)
      ) %>%
      pivot_longer(cols = c("gini_inntekt", "gini_inntekt_etter_skatt"),
                   names_to = "type_gini",
                   values_to = "gini_verdi")

    #Her lager vi et nytt datasett der vi bruker pakken ineq i koden for å beregne Gini-koeffisienten for inntekt og inntekt etter skatt per kommune
    ```

    ```{r warning=FALSE, message=FALSE}
    #Figure til oppgave 3.3
    options(scipen=999)#Vi bruker denne koden sånn at vi ikke skal få opp noe annet enn den fullstendige verdiene på y aksen.

    ginikoeff %>% 
      ggplot(aes(x = factor(kommnr), y = gini_verdi,fill = type_gini)) +
      geom_bar(stat = "identity", position = "dodge") +
      scale_fill_manual(values = c("gini_inntekt" = "blue",                     "gini_inntekt_etter_skatt" = "green"),
       name = "Inntektstype",
       labels = c("Inntekt før skatt", "Inntekt etter skatt")) +
     
      labs(title = "Gini-koeffisient for inntekt før og etter skatt per kommune", 
        x = "Kommune",
        y = "Ginikoeffisient") +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1))
    #Her lager vi et plot som forteller oss Gini-koeffisienten for inntekt før of etter skatt i de forskjellige kommunene.
    ```

    Gini-koeffisienten måler økonomisk ulikhet, og i denne figuren sammenligner vi Gini-koeffisienten mellom ulike kommuner. Høyere verdier på Y-aksen indikerer større økonomisk ulikhet i kommunen, mens lavere verdier indikerer en jevnere fordeling av inntekter eller formuer. Hvis en kommune har en høy Gini-koeffisient (nær 1), betyr det at noen få personer har en stor andel av den totale inntekten eller formuen, mens de fleste har mindre. En lav Gini-koeffisient (nær 0) betyr at inntektene eller formuene er jevnere fordelt i kommunen.

4.  Tenk at Troms fylkeskommune har som mål å få til en jevn inntektsfordeling blant sine innbyggere. Hvilke tiltak kan fylkeskommunen vurdere for ulike kommuner basert på dine svar til oppgave 3.2 og 3.3?

\[Svar under\]

Tiltak Troms fylkeskommune kan ta for å få ned inntektsforskjell kan for eksempel være skattelette for lavinntektsgrupper. Dette vil øke inntekten etter skatt for innbyggere med lavere lønninger og gi dem mer økonomisk handlingsrom. Fylkeskommunen kan vurdere ulike former for skattelettelser, slik som økt skattefradrag eller reduserte kommunale avgifter for husholdninger med lav inntekt. Dette tiltaket kan ha en positiv effekt ved å redusere den økonomiske belastningen for de mest sårbare gruppene i fylket. Et annet viktig tiltak for å redusere inntektsforskjeller er å sikre lik tilgang til utdanning og opplæring. Fylkeskommunen kan utvide tilbudet om gratis eller subsidiert videreutdanning og yrkesrettede kurs, spesielt rettet mot personer med lav inntekt eller de som bor i distriktene. Dette vil øke mulighetene for at flere kan kvalifisere seg til bedre betalte jobber og dermed redusere inntektsforskjellene. Tilrettelegging for digital opplæring kan også gjøre det enklere for innbyggerne i distriktene å delta i kompetanseheving uten å måtte flytte. Vi tror at Skattelette men spesielt utdanning kan hjelpe et samfunn, dette inkluderer fylkessamfunnet.

3\. Bedømmelse

Denne mappeoppgaven teller 40% av karakteren for dette kurset.

Formålet med oppgaven er å gi dere trening i å

-   skrive godt og tydelig

-   laste ned og anvende data og lage figurer

-   nytte grunnleggende samfunnsøkonomiske begrep og teori

-   være kreativ i å finne og skrive om en samfunnsøkonomisk problemstilling basert på data.

En god besvarelse svarer konkret på oppgavene, gir tydelige definisjoner av faglige begrep, og forklarer utfyllende innholdet i figurene som dere lager. R-koden bør være godt dokumentert og oversiktlig.

# 4. Tilbakemelding underveis

**Innleveringsfristen i Wiseflow: 24. oktober 2024 kl 13.00**

Dere vil få anledning til å presentere oppgaven til Derek muntlig og få tilbakemelding. Dette er frivillig, og ikke en del av bedømmelsen. Muntlig presentasjonen varer maksimum en halv time, og finner sted onsdag 16. oktober, på Handelshøgskolen: 02.118, LEET klasserommet . Dere kan sette dere opp i dette [Google dokumentet](https://docs.google.com/document/d/1uQfb4hXsW4lFBDUnhT_5r77p22r-SsfIRB6c_tnjxhM/edit?usp=sharing).

Lykke til!
